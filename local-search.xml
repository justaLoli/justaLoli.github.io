<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>本博客的搭建流程-续</title>
    <link href="/posts/197118431.html"/>
    <url>/posts/197118431.html</url>
    
    <content type="html"><![CDATA[<p>本博客的搭建，离不开我的一位高中同学兼好友的指路： <a href="https://mug-chen.github.io/posts/23043.html">https://mug-chen.github.io/posts/23043.html</a> 。他的文章简明且直击要害，为这个博客的搭建起到了灯塔一般的作用。</p><p>不过，由于过于简明，初阅他的文章有一定难度。本文主要在这篇文章的基础上，补充一些知识点。</p><h2 id="1-什么是hexo？为什么用hexo而不用wordpress之类的？"><a href="#1-什么是hexo？为什么用hexo而不用wordpress之类的？" class="headerlink" title="1. 什么是hexo？为什么用hexo而不用wordpress之类的？"></a>1. 什么是hexo？为什么用hexo而不用wordpress之类的？</h2><p>在这之前，我们先要明确一个网站的基本构成。</p><p>十分粗略的说，一个网页（的前端）包含三个部分：html，css，js。直观的说，html负责告诉浏览器：网页上需要显示哪些内容；css负责告诉浏览器：这些内容以何种样式（例如：字体大小和颜色）显示；js负责告诉浏览器：网页将如何反馈用户的操作。再形象一些，如果将网页比作人体，HTML是骨架，CSS是皮肤，JS是肌肉（人的动作）。</p><p>因此，如果要建立一个网页，至少需要熟悉上述三个部分以及它们之间的相互作用，这无疑非常困难。好在，这世上不乏现成的工具，我们只需要对这些工具进行简单的操作，它们就能帮我们生成所需的html，css，js，以及一系列网页所需的文件。</p><p><strong>hexo</strong> 就是这样的一个工具。hexo是一个专门的博客框架。有了它，我们只需要埋头撰写博文，无需在意htmlcssjs一流，它会自动由我们的博文生成精美的网页。</p><p>虽然世上还有wordpress等博客框架，但是选择hexo几乎是一个必然。我和我朋友的博客是利用 <code>Github Page</code> 呈现的。 <code>Github Page</code> 的优势是免费，劣势是其显示的网页必须是 <strong>静态</strong> 的。wordpress是动态的，必须建立在服务器上。这意味着，建立一个wordpress博客需要租服务器，并掏钱。而hexo生成的正好是静态网页。</p><p>关于为什么使用hexo，更多内容可以参阅：</p><blockquote><p><a href="https://blog.csdn.net/xinghaikongmeng/article/details/107399643">https://blog.csdn.net/xinghaikongmeng/article/details/107399643</a></p></blockquote><h2 id="2-后续内容：一些自定义和美化经验"><a href="#2-后续内容：一些自定义和美化经验" class="headerlink" title="2. 后续内容：一些自定义和美化经验"></a>2. 后续内容：一些自定义和美化经验</h2><ol><li>配置<code>_config.yml</code></li></ol><p>里面包含博客的诸多基本设置，可以自行设置更改。其中各项栏目的作用可以参见：</p><blockquote><p><a href="https://zhuanlan.zhihu.com/p/127786638">https://zhuanlan.zhihu.com/p/127786638</a></p></blockquote><ol start="2"><li>自定义主题</li></ol><p>最好的做法是自行检索，推荐的关键词“hexo”“主题”。最好是：先看看主题推荐的文章，确定自己想使用的主题 -&gt; 直接搜索主题名称，按照官网的提示和文档进行设置。</p><p>主题设置在 <code>_config.主题名称.yml</code> 中，需要按照主题给出的官方文档进行修改。</p><ol start="3"><li>一些使用小组件<ol><li>不在url中使用中文的组件：abbrlink</li><li>方便管理图片的组件：asset-image</li></ol></li></ol><p>参阅：</p><blockquote><p><a href="https://blog.csdn.net/qq_42780289/article/details/102662091">https://blog.csdn.net/qq_42780289/article/details/102662091</a></p><p><a href="https://www.cnblogs.com/QianBoy/p/8721529.html">https://www.cnblogs.com/QianBoy/p/8721529.html</a></p></blockquote><ol start="4"><li>cdn加速</li></ol><p>尚在尝试</p><h2 id="附：Mac-amp-linux部署hexo博客的方式（比windows简单很多！）和一些截图"><a href="#附：Mac-amp-linux部署hexo博客的方式（比windows简单很多！）和一些截图" class="headerlink" title="附：Mac&amp;linux部署hexo博客的方式（比windows简单很多！）和一些截图"></a>附：Mac&amp;linux部署hexo博客的方式（比windows简单很多！）和一些截图</h2><p>以Mac为例。</p><h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><ol><li>确保安装了homebrew，并确保homebrew使用了国内镜像</li><li>确保安装了git，并确保git可以通过代理等方式正确访问github</li></ol><p>上两条测试方式：在终端运行brew、再运行git，看是否有输出。</p><p>关于终端的git如何使用代理，可以参阅：</p><blockquote><p><a href="https://zhuanlan.zhihu.com/p/481574024">https://zhuanlan.zhihu.com/p/481574024</a></p></blockquote><h3 id="第一步：安装-node-js-和-hexo"><a href="#第一步：安装-node-js-和-hexo" class="headerlink" title="第一步：安装 node.js 和 hexo"></a>第一步：安装 node.js 和 hexo</h3><ol><li>node.js安装：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew install node<br></code></pre></td></tr></table></figure><p><img src="/posts/197118431/%E5%AE%89%E8%A3%85nodejs.jpeg" alt="安装node.js"></p><ol start="2"><li>hexo 安装：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><p><img src="/posts/197118431/%E5%AE%89%E8%A3%85hexo.jpeg" alt="安装hexo"></p><h3 id="第二步：创建项目，初始化hexo"><a href="#第二步：创建项目，初始化hexo" class="headerlink" title="第二步：创建项目，初始化hexo"></a>第二步：创建项目，初始化hexo</h3><ol><li>在某个位置，创建一个 <strong>空的</strong> 文件夹。</li><li>初始化hexo</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#先cd到创建的目录</span><br>hexo init<br></code></pre></td></tr></table></figure><p><img src="/posts/197118431/%E5%88%9D%E5%A7%8B%E5%8C%96hexo.jpeg" alt="初始化hexo"></p><p>注意：如果报错，请确认git配置了代理。</p><ol start="3"><li>在localhost运行hexo</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#s 是sever的简称</span><br>hexo s<br></code></pre></td></tr></table></figure><p><img src="/posts/197118431/%E5%9C%A8%E6%9C%AC%E5%9C%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%90%E8%A1%8Chexo%E6%9C%8D%E5%8A%A1.jpeg" alt="hexo s"></p><h3 id="第三步：将项目上传到Github，建立Github-Page"><a href="#第三步：将项目上传到Github，建立Github-Page" class="headerlink" title="第三步：将项目上传到Github，建立Github Page"></a>第三步：将项目上传到Github，建立Github Page</h3><ol><li>创建github项目</li></ol><p>可以参阅：</p><blockquote><p><a href="https://zhuanlan.zhihu.com/p/28321740">https://zhuanlan.zhihu.com/p/28321740</a></p></blockquote><p>看到 <em>2.开始搭建博客</em> 的前一点部分就好了。</p><ol start="2"><li>配置本地的hexo项目</li></ol><p>这部分直接参阅友链的<a href="https://mug-chen.github.io/posts/23043.html">文章</a>就好啦！</p><p>关于Git命令，文章里提供的是SSH连接策略，这里再提供有关HTTPS连接策略的内容：</p><blockquote><p><a href="https://blog.csdn.net/qq_38800316/article/details/120679506">https://blog.csdn.net/qq_38800316/article/details/120679506</a></p></blockquote><p>总之就是，如果HTTPS登录时提示 <code>Support for password authentication was removed on August 13,2021.</code> ，就按照文中做法，将“密码”一栏改成在Github上创建的token即可。</p><ol start="3"><li>将本地的hexo项目“部署”到Github上</li></ol><p>还有很多近义词如“同步”“上传”“push”方便理解这项操作。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#这是安装hexo的一个组件，用这个组建调用git</span><br>npm install hexo-deployer-git --save<br>hexo g <span class="hljs-comment">#g = generate</span><br>hexo d <span class="hljs-comment">#d = deploy</span><br></code></pre></td></tr></table></figure><hr><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><p>在文末，再次对 <code>MUG-chen</code> 以及文内所有引用源的作者表示感谢！</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Markdown样式一览</title>
    <link href="/posts/61272.html"/>
    <url>/posts/61272.html</url>
    
    <content type="html"><![CDATA[<hr><p>标题</p><hr><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><p>####### 七级标题（没有这个</p><hr><p>列表</p><hr><ul><li>无序列表</li><li>无序列表<ul><li>无序列表</li><li>无序列表<ul><li>无序列表</li><li>无序列表<ul><li>无序列表</li><li>无序列表<ul><li>无序列表</li></ul></li></ul></li></ul></li></ul></li></ul><ol><li>有序列表</li><li>有序列表<ol><li>有序列表</li><li>有序列表<ol><li>有序列表</li><li>有序列表<ol><li>有序列表</li></ol></li></ol></li></ol></li></ol><hr><p>UBI等</p><hr><p><strong>粗体</strong></p><p><em>斜体</em></p><p><em><strong>粗+斜体</strong></em></p><p><del>删除线</del></p><p>–下划线–</p><p><code>单行代码</code></p><h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><p>直接输入链接：<a href="https://justaloli.site/">https://justaloli.site</a></p><p>文字成为链接 <img src="https://justaloli.site/" alt="链接"></p><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><blockquote><p>引用内容</p><blockquote><p>二级引用</p></blockquote></blockquote><h1 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h1><hr><h1 id="富媒体"><a href="#富媒体" class="headerlink" title="富媒体"></a>富媒体</h1>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
