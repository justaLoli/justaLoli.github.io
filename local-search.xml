<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>本博客的搭建流程-续</title>
    <link href="/posts/197118431.html"/>
    <url>/posts/197118431.html</url>
    
    <content type="html"><![CDATA[<p>本博客的搭建，离不开我的一位高中同学兼好友的指路： <a href="https://mug-chen.github.io/posts/23043.html">https://mug-chen.github.io/posts/23043.html</a> 。他的文章简明且直击要害，为这个博客的搭建起到了灯塔一般的作用。</p><p>不过，由于过于简明，初阅他的文章有一定难度。本文主要在这篇文章的基础上，补充一些知识点。</p><h2 id="1-什么是hexo？为什么用hexo而不用wordpress之类的？"><a href="#1-什么是hexo？为什么用hexo而不用wordpress之类的？" class="headerlink" title="1. 什么是hexo？为什么用hexo而不用wordpress之类的？"></a>1. 什么是hexo？为什么用hexo而不用wordpress之类的？</h2><h2 id="2-一些自定义和美化经验"><a href="#2-一些自定义和美化经验" class="headerlink" title="2. 一些自定义和美化经验"></a>2. 一些自定义和美化经验</h2><h2 id="附：Mac-amp-linux部署hexo博客的方式（比windows简单很多！）和一些截图"><a href="#附：Mac-amp-linux部署hexo博客的方式（比windows简单很多！）和一些截图" class="headerlink" title="附：Mac&amp;linux部署hexo博客的方式（比windows简单很多！）和一些截图"></a>附：Mac&amp;linux部署hexo博客的方式（比windows简单很多！）和一些截图</h2><p>以Mac为例。</p><h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><ol><li>确保安装了homebrew，并确保homebrew使用了国内镜像</li><li>确保安装了git，并确保git可以通过代理等方式正确访问github</li></ol><p>上两条测试方式：在终端运行brew、再运行git，看是否有输出。</p><h3 id="第一步：安装-node-js-和-hexo"><a href="#第一步：安装-node-js-和-hexo" class="headerlink" title="第一步：安装 node.js 和 hexo"></a>第一步：安装 node.js 和 hexo</h3><ol><li>node.js安装：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew install node<br></code></pre></td></tr></table></figure><p><img src="/posts/197118431/%E5%AE%89%E8%A3%85nodejs.png" alt="安装node.js"></p><ol start="2"><li>hexo 安装：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><p><img src="/posts/197118431/%E5%AE%89%E8%A3%85hexo.png" alt="安装hexo"></p><h3 id="第二步：创建项目，初始化hexo"><a href="#第二步：创建项目，初始化hexo" class="headerlink" title="第二步：创建项目，初始化hexo"></a>第二步：创建项目，初始化hexo</h3><ol><li>在某个位置，创建一个 <strong>空的</strong> 文件夹。</li><li>初始化hexo</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#先cd到创建的目录</span><br>hexo init<br></code></pre></td></tr></table></figure><p><img src="/posts/197118431/%E5%88%9D%E5%A7%8B%E5%8C%96hexo.png" alt="初始化hexo"></p><p>注意：如果报错，请确认git配置了代理。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;map&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function">string <span class="hljs-title">genesingleNum</span><span class="hljs-params">(string c)</span></span>&#123;<br>    <span class="hljs-keyword">if</span>(c[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;A&#x27;</span>||c[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;B&#x27;</span>||c[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;C&#x27;</span>) <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;2&quot;</span>;<br>    <span class="hljs-keyword">if</span>(c[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;D&#x27;</span>||c[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;E&#x27;</span>||c[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;F&#x27;</span>) <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;3&quot;</span>;<br>    <span class="hljs-keyword">if</span>(c[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;G&#x27;</span>||c[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;H&#x27;</span>||c[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;I&#x27;</span>) <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;4&quot;</span>;<br>    <span class="hljs-keyword">if</span>(c[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;J&#x27;</span>||c[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;K&#x27;</span>||c[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;L&#x27;</span>) <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;5&quot;</span>;<br>    <span class="hljs-keyword">if</span>(c[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;M&#x27;</span>||c[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;N&#x27;</span>||c[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;O&#x27;</span>) <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;6&quot;</span>;<br>    <span class="hljs-keyword">if</span>(c[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;P&#x27;</span>||c[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;R&#x27;</span>||c[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;S&#x27;</span>) <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;7&quot;</span>;<br>    <span class="hljs-keyword">if</span>(c[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;T&#x27;</span>||c[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;U&#x27;</span>||c[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;V&#x27;</span>) <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;8&quot;</span>;<br>    <span class="hljs-keyword">if</span>(c[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;W&#x27;</span>||c[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;X&#x27;</span>||c[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;Y&#x27;</span>) <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;9&quot;</span>;<br>    <span class="hljs-keyword">if</span>(c[<span class="hljs-number">0</span>]==<span class="hljs-string">&#x27;-&#x27;</span>)<span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">return</span> c;<br>&#125;<br><span class="hljs-function">string <span class="hljs-title">geneActualNumber</span><span class="hljs-params">(string inputNumber)</span></span>&#123;<br>    string resultString = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; inputNumber.<span class="hljs-built_in">size</span>(); ++i)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(resultString.<span class="hljs-built_in">size</span>()==<span class="hljs-number">3</span>)&#123;<br>            resultString+=<span class="hljs-string">&quot;-&quot;</span>;<br>        &#125;<br>        resultString+=<span class="hljs-built_in">genesingleNum</span>(inputNumber.<span class="hljs-built_in">substr</span>(i,<span class="hljs-number">1</span>));<br>    &#125;<br>    <span class="hljs-keyword">return</span> resultString;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br><br>    <span class="hljs-type">int</span> n;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>,&amp;n);<br>    map&lt;string,<span class="hljs-type">int</span>&gt; mymap;<br>    string tempstr;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; ++i)<br>    &#123;<br>        <span class="hljs-built_in">getline</span>(cin,tempstr,<span class="hljs-string">&#x27;\n&#x27;</span>);<br>        mymap[<span class="hljs-built_in">geneActualNumber</span>(tempstr)]++;<br>    &#125;<br>    <span class="hljs-type">int</span> count=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span> i = mymap.<span class="hljs-built_in">begin</span>();i!=mymap.<span class="hljs-built_in">end</span>();i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(i-&gt;second&gt;<span class="hljs-number">1</span>)&#123;<br>            cout &lt;&lt; i-&gt;first.<span class="hljs-built_in">substr</span>(<span class="hljs-number">0</span>,<span class="hljs-number">8</span>) &lt;&lt; <span class="hljs-string">&quot; &quot;</span>&lt;&lt; i-&gt;second &lt;&lt; endl;<br>            count++;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(count==<span class="hljs-number">0</span>)&#123;<br>        cout &lt;&lt; <span class="hljs-string">&quot;No duplicates.&quot;</span>;<br>    &#125;<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/posts/1243066710.html"/>
    <url>/posts/1243066710.html</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
